// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_header.proto

#include "message_header.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_message_5fappid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageAppidProtobuf_message_5fappid_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_message_5fid_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MessageIdProtobuf_message_5fid_2eproto;
namespace message {
namespace protobuf {
class MessageHeaderProtobufDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MessageHeaderProtobuf> _instance;
} _MessageHeaderProtobuf_default_instance_;
}  // namespace protobuf
}  // namespace message
static void InitDefaultsscc_info_MessageHeaderProtobuf_message_5fheader_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::message::protobuf::_MessageHeaderProtobuf_default_instance_;
    new (ptr) ::message::protobuf::MessageHeaderProtobuf();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::message::protobuf::MessageHeaderProtobuf::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MessageHeaderProtobuf_message_5fheader_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MessageHeaderProtobuf_message_5fheader_2eproto}, {
      &scc_info_MessageIdProtobuf_message_5fid_2eproto.base,
      &scc_info_MessageAppidProtobuf_message_5fappid_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_message_5fheader_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_message_5fheader_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_message_5fheader_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_message_5fheader_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::message::protobuf::MessageHeaderProtobuf, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::message::protobuf::MessageHeaderProtobuf, mid_),
  PROTOBUF_FIELD_OFFSET(::message::protobuf::MessageHeaderProtobuf, appid_),
  PROTOBUF_FIELD_OFFSET(::message::protobuf::MessageHeaderProtobuf, body_len_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::message::protobuf::MessageHeaderProtobuf)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::message::protobuf::_MessageHeaderProtobuf_default_instance_),
};

const char descriptor_table_protodef_message_5fheader_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\024message_header.proto\022\020message.protobuf"
  "\032\020message_id.proto\032\023message_appid.proto\""
  "\222\001\n\025MessageHeaderProtobuf\0220\n\003mid\030\001 \001(\0132#"
  ".message.protobuf.MessageIdProtobuf\0225\n\005a"
  "ppid\030\002 \001(\0132&.message.protobuf.MessageApp"
  "idProtobuf\022\020\n\010body_len\030\003 \001(\rb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_message_5fheader_2eproto_deps[2] = {
  &::descriptor_table_message_5fappid_2eproto,
  &::descriptor_table_message_5fid_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_message_5fheader_2eproto_sccs[1] = {
  &scc_info_MessageHeaderProtobuf_message_5fheader_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_message_5fheader_2eproto_once;
static bool descriptor_table_message_5fheader_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5fheader_2eproto = {
  &descriptor_table_message_5fheader_2eproto_initialized, descriptor_table_protodef_message_5fheader_2eproto, "message_header.proto", 236,
  &descriptor_table_message_5fheader_2eproto_once, descriptor_table_message_5fheader_2eproto_sccs, descriptor_table_message_5fheader_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_message_5fheader_2eproto::offsets,
  file_level_metadata_message_5fheader_2eproto, 1, file_level_enum_descriptors_message_5fheader_2eproto, file_level_service_descriptors_message_5fheader_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_message_5fheader_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_message_5fheader_2eproto), true);
namespace message {
namespace protobuf {

// ===================================================================

void MessageHeaderProtobuf::InitAsDefaultInstance() {
  ::message::protobuf::_MessageHeaderProtobuf_default_instance_._instance.get_mutable()->mid_ = const_cast< ::message::protobuf::MessageIdProtobuf*>(
      ::message::protobuf::MessageIdProtobuf::internal_default_instance());
  ::message::protobuf::_MessageHeaderProtobuf_default_instance_._instance.get_mutable()->appid_ = const_cast< ::message::protobuf::MessageAppidProtobuf*>(
      ::message::protobuf::MessageAppidProtobuf::internal_default_instance());
}
class MessageHeaderProtobuf::_Internal {
 public:
  static const ::message::protobuf::MessageIdProtobuf& mid(const MessageHeaderProtobuf* msg);
  static const ::message::protobuf::MessageAppidProtobuf& appid(const MessageHeaderProtobuf* msg);
};

const ::message::protobuf::MessageIdProtobuf&
MessageHeaderProtobuf::_Internal::mid(const MessageHeaderProtobuf* msg) {
  return *msg->mid_;
}
const ::message::protobuf::MessageAppidProtobuf&
MessageHeaderProtobuf::_Internal::appid(const MessageHeaderProtobuf* msg) {
  return *msg->appid_;
}
void MessageHeaderProtobuf::clear_mid() {
  if (GetArenaNoVirtual() == nullptr && mid_ != nullptr) {
    delete mid_;
  }
  mid_ = nullptr;
}
void MessageHeaderProtobuf::clear_appid() {
  if (GetArenaNoVirtual() == nullptr && appid_ != nullptr) {
    delete appid_;
  }
  appid_ = nullptr;
}
MessageHeaderProtobuf::MessageHeaderProtobuf()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:message.protobuf.MessageHeaderProtobuf)
}
MessageHeaderProtobuf::MessageHeaderProtobuf(const MessageHeaderProtobuf& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_mid()) {
    mid_ = new ::message::protobuf::MessageIdProtobuf(*from.mid_);
  } else {
    mid_ = nullptr;
  }
  if (from._internal_has_appid()) {
    appid_ = new ::message::protobuf::MessageAppidProtobuf(*from.appid_);
  } else {
    appid_ = nullptr;
  }
  body_len_ = from.body_len_;
  // @@protoc_insertion_point(copy_constructor:message.protobuf.MessageHeaderProtobuf)
}

void MessageHeaderProtobuf::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MessageHeaderProtobuf_message_5fheader_2eproto.base);
  ::memset(&mid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&body_len_) -
      reinterpret_cast<char*>(&mid_)) + sizeof(body_len_));
}

MessageHeaderProtobuf::~MessageHeaderProtobuf() {
  // @@protoc_insertion_point(destructor:message.protobuf.MessageHeaderProtobuf)
  SharedDtor();
}

void MessageHeaderProtobuf::SharedDtor() {
  if (this != internal_default_instance()) delete mid_;
  if (this != internal_default_instance()) delete appid_;
}

void MessageHeaderProtobuf::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MessageHeaderProtobuf& MessageHeaderProtobuf::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MessageHeaderProtobuf_message_5fheader_2eproto.base);
  return *internal_default_instance();
}


void MessageHeaderProtobuf::Clear() {
// @@protoc_insertion_point(message_clear_start:message.protobuf.MessageHeaderProtobuf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == nullptr && mid_ != nullptr) {
    delete mid_;
  }
  mid_ = nullptr;
  if (GetArenaNoVirtual() == nullptr && appid_ != nullptr) {
    delete appid_;
  }
  appid_ = nullptr;
  body_len_ = 0u;
  _internal_metadata_.Clear();
}

const char* MessageHeaderProtobuf::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .message.protobuf.MessageIdProtobuf mid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_mid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .message.protobuf.MessageAppidProtobuf appid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_appid(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 body_len = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          body_len_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MessageHeaderProtobuf::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:message.protobuf.MessageHeaderProtobuf)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .message.protobuf.MessageIdProtobuf mid = 1;
  if (this->has_mid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::mid(this), target, stream);
  }

  // .message.protobuf.MessageAppidProtobuf appid = 2;
  if (this->has_appid()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::appid(this), target, stream);
  }

  // uint32 body_len = 3;
  if (this->body_len() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_body_len(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:message.protobuf.MessageHeaderProtobuf)
  return target;
}

size_t MessageHeaderProtobuf::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:message.protobuf.MessageHeaderProtobuf)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .message.protobuf.MessageIdProtobuf mid = 1;
  if (this->has_mid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *mid_);
  }

  // .message.protobuf.MessageAppidProtobuf appid = 2;
  if (this->has_appid()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *appid_);
  }

  // uint32 body_len = 3;
  if (this->body_len() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_body_len());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MessageHeaderProtobuf::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:message.protobuf.MessageHeaderProtobuf)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageHeaderProtobuf* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MessageHeaderProtobuf>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:message.protobuf.MessageHeaderProtobuf)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:message.protobuf.MessageHeaderProtobuf)
    MergeFrom(*source);
  }
}

void MessageHeaderProtobuf::MergeFrom(const MessageHeaderProtobuf& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:message.protobuf.MessageHeaderProtobuf)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_mid()) {
    _internal_mutable_mid()->::message::protobuf::MessageIdProtobuf::MergeFrom(from._internal_mid());
  }
  if (from.has_appid()) {
    _internal_mutable_appid()->::message::protobuf::MessageAppidProtobuf::MergeFrom(from._internal_appid());
  }
  if (from.body_len() != 0) {
    _internal_set_body_len(from._internal_body_len());
  }
}

void MessageHeaderProtobuf::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:message.protobuf.MessageHeaderProtobuf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageHeaderProtobuf::CopyFrom(const MessageHeaderProtobuf& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:message.protobuf.MessageHeaderProtobuf)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageHeaderProtobuf::IsInitialized() const {
  return true;
}

void MessageHeaderProtobuf::InternalSwap(MessageHeaderProtobuf* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(mid_, other->mid_);
  swap(appid_, other->appid_);
  swap(body_len_, other->body_len_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MessageHeaderProtobuf::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::message::protobuf::MessageHeaderProtobuf* Arena::CreateMaybeMessage< ::message::protobuf::MessageHeaderProtobuf >(Arena* arena) {
  return Arena::CreateInternal< ::message::protobuf::MessageHeaderProtobuf >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
