// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message_header.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_message_5fheader_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_message_5fheader_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_message_5fheader_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_message_5fheader_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_message_5fheader_2eproto;
namespace message {
namespace protobuf {
class MessageHeaderProtobuf;
class MessageHeaderProtobufDefaultTypeInternal;
extern MessageHeaderProtobufDefaultTypeInternal _MessageHeaderProtobuf_default_instance_;
}  // namespace protobuf
}  // namespace message
PROTOBUF_NAMESPACE_OPEN
template<> ::message::protobuf::MessageHeaderProtobuf* Arena::CreateMaybeMessage<::message::protobuf::MessageHeaderProtobuf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace message {
namespace protobuf {

// ===================================================================

class MessageHeaderProtobuf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:message.protobuf.MessageHeaderProtobuf) */ {
 public:
  MessageHeaderProtobuf();
  virtual ~MessageHeaderProtobuf();

  MessageHeaderProtobuf(const MessageHeaderProtobuf& from);
  MessageHeaderProtobuf(MessageHeaderProtobuf&& from) noexcept
    : MessageHeaderProtobuf() {
    *this = ::std::move(from);
  }

  inline MessageHeaderProtobuf& operator=(const MessageHeaderProtobuf& from) {
    CopyFrom(from);
    return *this;
  }
  inline MessageHeaderProtobuf& operator=(MessageHeaderProtobuf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MessageHeaderProtobuf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MessageHeaderProtobuf* internal_default_instance() {
    return reinterpret_cast<const MessageHeaderProtobuf*>(
               &_MessageHeaderProtobuf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(MessageHeaderProtobuf& a, MessageHeaderProtobuf& b) {
    a.Swap(&b);
  }
  inline void Swap(MessageHeaderProtobuf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MessageHeaderProtobuf* New() const final {
    return CreateMaybeMessage<MessageHeaderProtobuf>(nullptr);
  }

  MessageHeaderProtobuf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MessageHeaderProtobuf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MessageHeaderProtobuf& from);
  void MergeFrom(const MessageHeaderProtobuf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MessageHeaderProtobuf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "message.protobuf.MessageHeaderProtobuf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_message_5fheader_2eproto);
    return ::descriptor_table_message_5fheader_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMidFieldNumber = 1,
    kComidFieldNumber = 2,
    kAppidFieldNumber = 3,
  };
  // uint64 mid = 1;
  void clear_mid();
  ::PROTOBUF_NAMESPACE_ID::uint64 mid() const;
  void set_mid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_mid() const;
  void _internal_set_mid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // uint32 comid = 2;
  void clear_comid();
  ::PROTOBUF_NAMESPACE_ID::uint32 comid() const;
  void set_comid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_comid() const;
  void _internal_set_comid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // uint32 appid = 3;
  void clear_appid();
  ::PROTOBUF_NAMESPACE_ID::uint32 appid() const;
  void set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_appid() const;
  void _internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // @@protoc_insertion_point(class_scope:message.protobuf.MessageHeaderProtobuf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::uint64 mid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 comid_;
  ::PROTOBUF_NAMESPACE_ID::uint32 appid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_message_5fheader_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MessageHeaderProtobuf

// uint64 mid = 1;
inline void MessageHeaderProtobuf::clear_mid() {
  mid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MessageHeaderProtobuf::_internal_mid() const {
  return mid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 MessageHeaderProtobuf::mid() const {
  // @@protoc_insertion_point(field_get:message.protobuf.MessageHeaderProtobuf.mid)
  return _internal_mid();
}
inline void MessageHeaderProtobuf::_internal_set_mid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  mid_ = value;
}
inline void MessageHeaderProtobuf::set_mid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_mid(value);
  // @@protoc_insertion_point(field_set:message.protobuf.MessageHeaderProtobuf.mid)
}

// uint32 comid = 2;
inline void MessageHeaderProtobuf::clear_comid() {
  comid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MessageHeaderProtobuf::_internal_comid() const {
  return comid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MessageHeaderProtobuf::comid() const {
  // @@protoc_insertion_point(field_get:message.protobuf.MessageHeaderProtobuf.comid)
  return _internal_comid();
}
inline void MessageHeaderProtobuf::_internal_set_comid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  comid_ = value;
}
inline void MessageHeaderProtobuf::set_comid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_comid(value);
  // @@protoc_insertion_point(field_set:message.protobuf.MessageHeaderProtobuf.comid)
}

// uint32 appid = 3;
inline void MessageHeaderProtobuf::clear_appid() {
  appid_ = 0u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MessageHeaderProtobuf::_internal_appid() const {
  return appid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 MessageHeaderProtobuf::appid() const {
  // @@protoc_insertion_point(field_get:message.protobuf.MessageHeaderProtobuf.appid)
  return _internal_appid();
}
inline void MessageHeaderProtobuf::_internal_set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  
  appid_ = value;
}
inline void MessageHeaderProtobuf::set_appid(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_appid(value);
  // @@protoc_insertion_point(field_set:message.protobuf.MessageHeaderProtobuf.appid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace message

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_message_5fheader_2eproto
